{
    "docs": [
        {
            "location": "/", 
            "text": "Bienvenid@s\n\n\nEl presente espacio recopila teor\u00eda y ejercicios pr\u00e1cticos sobre temas relacionados con la implementaci\u00f3n de redes y servicios utilizando, siempre que sea posible, software de c\u00f3digo abierto. Los contenidos intentan cubrir los objetivos propuestos en el dise\u00f1o curricular de la materia \nInstalaci\u00f3n, mantenimiento y reparaci\u00f3n de redes inform\u00e1ticas\n correspondiente al s\u00e9ptimo a\u00f1o de estudios de la escuela secundaria t\u00e9cnica, con orientaci\u00f3n \nT\u00e9cnico en Inform\u00e1tica Profesional y Personal\n, en Buenos Aires, Argentina. \n\n\nSoftware a emplear\n\n\nLas clases se dictar\u00e1n en un laboratorio virtual local ubicado en el instituto. No obstante, es posible obtener las herramientas de software que se utilizar\u00e1n a lo largo de la cursada: \n\n\n\n\nUbuntu Desktop 16.04 LTS - 32 bits\n\n\nUbuntu Desktop 16.04 LTS - 64 bits\n\n\nUbuntu Server 16.04 LTS - 32 bits\n\n\nUbuntu Server 16.04 LTS - 64 bits\n\n\n\n\nTemas\n\n\n\n\nNetworking\n\n\nServicios de red\n\n\nMonitoreo de redes\n\n\nTroubleshooting\n\n\n\n\nSitio en construcci\u00f3n...", 
            "title": "Inicio"
        }, 
        {
            "location": "/#bienvenids", 
            "text": "El presente espacio recopila teor\u00eda y ejercicios pr\u00e1cticos sobre temas relacionados con la implementaci\u00f3n de redes y servicios utilizando, siempre que sea posible, software de c\u00f3digo abierto. Los contenidos intentan cubrir los objetivos propuestos en el dise\u00f1o curricular de la materia  Instalaci\u00f3n, mantenimiento y reparaci\u00f3n de redes inform\u00e1ticas  correspondiente al s\u00e9ptimo a\u00f1o de estudios de la escuela secundaria t\u00e9cnica, con orientaci\u00f3n  T\u00e9cnico en Inform\u00e1tica Profesional y Personal , en Buenos Aires, Argentina.", 
            "title": "Bienvenid@s"
        }, 
        {
            "location": "/#software-a-emplear", 
            "text": "Las clases se dictar\u00e1n en un laboratorio virtual local ubicado en el instituto. No obstante, es posible obtener las herramientas de software que se utilizar\u00e1n a lo largo de la cursada:    Ubuntu Desktop 16.04 LTS - 32 bits  Ubuntu Desktop 16.04 LTS - 64 bits  Ubuntu Server 16.04 LTS - 32 bits  Ubuntu Server 16.04 LTS - 64 bits", 
            "title": "Software a emplear"
        }, 
        {
            "location": "/#temas", 
            "text": "Networking  Servicios de red  Monitoreo de redes  Troubleshooting   Sitio en construcci\u00f3n...", 
            "title": "Temas"
        }, 
        {
            "location": "/resolucionNombresHosts/", 
            "text": "El archivo \nhosts\n existe en todos los sistemas operativos. Si bien se puede emplear para la resoluci\u00f3n de nombres de dominio en una red local, en redes medianas actualmente es reemplazado por el servicio de DNS. \n\n\n\n\nWikipedia\n\n\nEl archivo \nhosts\n de un ordenador es usado por el sistema operativo para guardar la \ncorrespondencia entre dominios de Internet y direcciones IP\n. Este es uno de los diferentes m\u00e9todos que usa el sistema operativo para resolver nombres de dominios. \n\n\nAntiguamente cuando no hab\u00eda servidores DNS que resolvieran los dominios, el archivo hosts era el \u00fanico encargado de hacerlo, pero dej\u00f3 de utilizarse cuando Internet empez\u00f3 a crecer en nombres de dominio, pasando a usar servidores de resoluci\u00f3n de DNS. \n\n\nEn muchos sistemas operativos este m\u00e9todo es usado preferentemente respecto a otros como el DNS. En la actualidad tambi\u00e9n es usado para bloquear contenidos de Internet como la publicidad web.\n\n\n\n\nUbicaci\u00f3n del archivo \nhosts\n\n\nEl archivo \nhosts\n es un archivo de texto plano que puede ser editado por el administrador del equipo y su ubicaci\u00f3n depende del sistema operativo:\n\n\n\n\n\n\n\n\nSistema operativo\n\n\nUbicaci\u00f3n del archivo \nhosts\n\n\n\n\n\n\n\n\n\n\nMicrosoft Windows\n\n\nC:\\Windows\\System32\\drivers\\etc\\hosts\n\n\n\n\n\n\nUnix - GNU/Linux - BSD\n\n\n/etc/hosts\n\n\n\n\n\n\nMac OS - iPhone OS\n\n\n/private/etc/hosts\n\n\n\n\n\n\nAndroid\n\n\n/system/etc/hosts\n\n\n\n\n\n\n\n\nEntonces, si deseamos abrir el archivo en \nGNU/Linux\n, ejecutamos:\n\n\nsudo vim /etc/hosts\n\n\n\n\n\nSi en cambio, deseamos abrir el archivo en \nMicrosoft Windows\n, haremos clic derecho sobre el archivo \nhosts\n (ver ubicaci\u00f3n en la tabla) y seleccionamos del men\u00fa contextual la opci\u00f3n \"Abrir como Administrador\". \n\n\nModificando el archivo \nhosts\n\n\n\n\nContenido del archivo \nhosts\n\n\nSi importar el sistema operativo, la sintaxis del archivo \nhosts\n ser\u00e1 la siguiente: \n\n\nip.del.equipo  nombre_De_Dominio\n  \n\n\n\n\nSi tomamos como ejemplo el dominio ficticio \nmisitio.lan\n y suponiendo que la direcci\u00f3n IP del equipo servidor es \n192.168.0.33\n:\n\n\n192.168.0.33  www.miisito.lan  misitio.lan  http://misitio.lan\n\n\n\n\n\nSi configuramos correctamente el archivo \nhosts\n de nuestro sistema, podremos acceder al/los dominio/s especificados. \n\n\n\n\nResoluci\u00f3n de dominios empleando el archivo \nhosts\n\n\nSi en una red local, decidimos resolver los nombres de dominio vali\u00e9ndonos del archivo \nhosts\n tendremos que copiar el mismo archivo \nhosts\n en cada uno de los equipos que compongan la red.", 
            "title": "El archivo hosts"
        }, 
        {
            "location": "/resolucionNombresHosts/#ubicacion-del-archivo-hosts", 
            "text": "El archivo  hosts  es un archivo de texto plano que puede ser editado por el administrador del equipo y su ubicaci\u00f3n depende del sistema operativo:     Sistema operativo  Ubicaci\u00f3n del archivo  hosts      Microsoft Windows  C:\\Windows\\System32\\drivers\\etc\\hosts    Unix - GNU/Linux - BSD  /etc/hosts    Mac OS - iPhone OS  /private/etc/hosts    Android  /system/etc/hosts     Entonces, si deseamos abrir el archivo en  GNU/Linux , ejecutamos:  sudo vim /etc/hosts  Si en cambio, deseamos abrir el archivo en  Microsoft Windows , haremos clic derecho sobre el archivo  hosts  (ver ubicaci\u00f3n en la tabla) y seleccionamos del men\u00fa contextual la opci\u00f3n \"Abrir como Administrador\".", 
            "title": "Ubicaci\u00f3n del archivo hosts"
        }, 
        {
            "location": "/resolucionNombresHosts/#modificando-el-archivo-hosts", 
            "text": "Contenido del archivo  hosts  Si importar el sistema operativo, la sintaxis del archivo  hosts  ser\u00e1 la siguiente:   ip.del.equipo  nombre_De_Dominio      Si tomamos como ejemplo el dominio ficticio  misitio.lan  y suponiendo que la direcci\u00f3n IP del equipo servidor es  192.168.0.33 :  192.168.0.33  www.miisito.lan  misitio.lan  http://misitio.lan  Si configuramos correctamente el archivo  hosts  de nuestro sistema, podremos acceder al/los dominio/s especificados.    Resoluci\u00f3n de dominios empleando el archivo  hosts  Si en una red local, decidimos resolver los nombres de dominio vali\u00e9ndonos del archivo  hosts  tendremos que copiar el mismo archivo  hosts  en cada uno de los equipos que compongan la red.", 
            "title": "Modificando el archivo hosts"
        }, 
        {
            "location": "/lampQueEs/", 
            "text": "Se denomina \nLAMP\n a un grupo de software de c\u00f3digo libre que se instala normalmente en conjunto para habilitar un servidor para alojar sitios y aplicaciones web din\u00e1micas. Este t\u00e9rmino en realidad es un acr\u00f3nimo que representa un sistema operativo \nGNU/Linux\n con un servidor web \nApache\n, donde los datos del sitio son almacenados en base de datos \nMySQL\n o \nMariaDB\n y el contenido din\u00e1mico es procesado con \nPHP\n.\n\n\n\n\nAcr\u00f3nimos\n\n\nComo de describe m\u00e1s arriba, \nLAMP\n es un acr\u00f3nimo de \nL\ninux, \nA\npache, \nM\nySQL y \nP\nHP. Si esta pila o \nstack\n de aplicaciones se ejecuta en Microsoft Windows se denomina \nWAMP\n y \nMAMP\n si se corre sobre MAC OS X.\n\n\n\n\n\n\nApache\n\n\nEl servidor HTTP Apache es un servidor web HTTP de c\u00f3digo abierto, para plataformas Unix (BSD, GNU/Linux, etc.), Microsoft Windows, Macintosh y otras. \n\n\nEl servidor Apache es desarrollado y mantenido por una comunidad de usuarios bajo la supervisi\u00f3n de la \nApache Software Foundation\n dentro del proyecto HTTP Server (httpd).\n\n\n\n\nApache tiene amplia aceptaci\u00f3n en la red: desde 1996, Apache, es el servidor HTTP m\u00e1s usado. \n\n\n\n\nJug\u00f3 un papel fundamental en el desarrollo fundamental de la World Wide Web y alcanz\u00f3 su m\u00e1xima cuota de mercado en 2005 siendo el servidor empleado en el 70% de los sitios web en el mundo, sin embargo ha sufrido un descenso en su cuota de mercado en los \u00faltimos a\u00f1os. En 2009 se convirti\u00f3 en el primer servidor web que aloj\u00f3 m\u00e1s de 100 millones de sitios web.\n\n\n\n\nFuente: \nWikipedia\n  |  \nNetcraft", 
            "title": "\u00bfQu\u00e9 es?"
        }, 
        {
            "location": "/lampQueEs/#apache", 
            "text": "El servidor HTTP Apache es un servidor web HTTP de c\u00f3digo abierto, para plataformas Unix (BSD, GNU/Linux, etc.), Microsoft Windows, Macintosh y otras.   El servidor Apache es desarrollado y mantenido por una comunidad de usuarios bajo la supervisi\u00f3n de la  Apache Software Foundation  dentro del proyecto HTTP Server (httpd).   Apache tiene amplia aceptaci\u00f3n en la red: desde 1996, Apache, es el servidor HTTP m\u00e1s usado.    Jug\u00f3 un papel fundamental en el desarrollo fundamental de la World Wide Web y alcanz\u00f3 su m\u00e1xima cuota de mercado en 2005 siendo el servidor empleado en el 70% de los sitios web en el mundo, sin embargo ha sufrido un descenso en su cuota de mercado en los \u00faltimos a\u00f1os. En 2009 se convirti\u00f3 en el primer servidor web que aloj\u00f3 m\u00e1s de 100 millones de sitios web.   Fuente:  Wikipedia   |   Netcraft", 
            "title": "Apache"
        }, 
        {
            "location": "/lampInstalacion/", 
            "text": "Ingreso de datos\n\n\nDurante la instalaci\u00f3n se solicitar\u00e1 en varias ocasiones el ingreso de informaci\u00f3n por parte del usuario. Por ejemplo, la contrase\u00f1a del usuario root de la base de datos, o el tipo de servicio a instalar si usamos \ntasksel\n. Conviene prestar atenci\u00f3n en cada paso para evitar errores de configuraci\u00f3n. \n\n\n\n\nPara disponer de un servidor web \nLAMP\n ejecutaremos los comandos que se indican a continuaci\u00f3n. \n\n\nsudo apt install lamp-server^\n\n\n\n\n\nO bien: \n\n\nsudo apt install tasksel\n\n\n\n\n\nAdicionalmente podemos instalar un gestor para nuestra base de datos, llamado \nphpmyadmin\n (junto a algunas librer\u00edas extra), ejecutando el siguiente comando: \n\n\nsudo apt install phpmyadmin php-gettext php-mbstring\n\n\n\n\n\nVerificando la instalaci\u00f3n\n\n\nPara verificar el correcto funcionamiento del servidor, seguiremos los siguientes pasos:\n\n\nApache\n\n\nAbrimos el navegador web y nos dirigimos a la siguiente direcci\u00f3n: \nhttp://nombreDominioServidor\n o \nhttp://direccionIPServidor\n. En cualquier caso deber\u00edamos visualizar la p\u00e1gina de bienvenida del servidor web:\n\n\n\n\nPHP\n\n\nDentro de la carpeta ra\u00edz por defecto del servidor web \n/var/www/html\n, creamos un archivo con el nombre \ninfo.php\n (en realidad, se puede llamar como prefieras):\n\n\nsudo nano /var/www/html/info.php\n\n\n\n\n\nY agregaremos al archivo el contenido:\n\n\n?php\n\n\nphpinfo\n();\n\n\n?\n\n\n\n\n\n\nLuego de guardar los cambios al archivo, abrimos un navegador web y visitamos la direcci\u00f3n \nhttp://nombreDominioServidor/info.php\n \u00f3 \nhttp://direccionIPServidor/\u00ecnfo.php\n y deber\u00edamos la p\u00e1gina de informaci\u00f3n sobre php:\n\n\n\n\nphpMyAdmin\n\n\nAbrimos nuestro navegador y nos dirigimos a \nhttp://nombreDominioServidor/phpmyadmin\n \u00f3 \nhttp://direccionIPServidor/phpmyadmin\n. Veremos una p\u00e1gina similar a \u00e9sta:", 
            "title": "Instalaci\u00f3n"
        }, 
        {
            "location": "/lampInstalacion/#verificando-la-instalacion", 
            "text": "Para verificar el correcto funcionamiento del servidor, seguiremos los siguientes pasos:", 
            "title": "Verificando la instalaci\u00f3n"
        }, 
        {
            "location": "/lampInstalacion/#apache", 
            "text": "Abrimos el navegador web y nos dirigimos a la siguiente direcci\u00f3n:  http://nombreDominioServidor  o  http://direccionIPServidor . En cualquier caso deber\u00edamos visualizar la p\u00e1gina de bienvenida del servidor web:", 
            "title": "Apache"
        }, 
        {
            "location": "/lampInstalacion/#php", 
            "text": "Dentro de la carpeta ra\u00edz por defecto del servidor web  /var/www/html , creamos un archivo con el nombre  info.php  (en realidad, se puede llamar como prefieras):  sudo nano /var/www/html/info.php  Y agregaremos al archivo el contenido:  ?php  phpinfo ();  ?   Luego de guardar los cambios al archivo, abrimos un navegador web y visitamos la direcci\u00f3n  http://nombreDominioServidor/info.php  \u00f3  http://direccionIPServidor/\u00ecnfo.php  y deber\u00edamos la p\u00e1gina de informaci\u00f3n sobre php:", 
            "title": "PHP"
        }, 
        {
            "location": "/lampInstalacion/#phpmyadmin", 
            "text": "Abrimos nuestro navegador y nos dirigimos a  http://nombreDominioServidor/phpmyadmin  \u00f3  http://direccionIPServidor/phpmyadmin . Veremos una p\u00e1gina similar a \u00e9sta:", 
            "title": "phpMyAdmin"
        }, 
        {
            "location": "/lampGestionBasica/", 
            "text": "El \nservidor HTTP Apache\n se gestiona a trav\u00e9s de comandos que ejecutaremos en la terminal. De momento, no exsite una interfaz gr\u00e1fica nativa para hacerlo, aunque podemos encontrar en este sentido algunos desarrollos de terceros como \nWebmin\n o \nAjenti\n, entre otros. \n\n\nPor otro lado, \nPHP\n debe gestionarse instalando alg\u00fan que otro m\u00f3dulo (seg\u00fan nuestras necesidades) y modificando sus archivos de configuraci\u00f3n.\n\n\nFinalmente, la base de datos \nMySQL\n o \nMariaDB\n puede gestionarse a trav\u00e9s de la terminal de comandos, o bien, a trav\u00e9s de aplicaciones como \nphpMyAdmin\n o \nDBeaver\n entre otras.\n\n\n\n\nArchivos y directorio de configuraci\u00f3n\n\n\nPara gestionar efectivamente un servidor LAMP es imprescindible conocer la ubicaci\u00f3n de los archivos y carpetas de configuraci\u00f3n, ya que facilitar\u00e1 enormente nuestro trabajo. \n\n\n\n\nApache\n\n\nA continuaci\u00f3n se listan directorios y archivos de configuraci\u00f3n as\u00ed como los comandos para gestionarlo desde la terminal. \n\n\nArchivos y carpetas importantes\n\n\nUna vez instalado el servidor web Apache se crea una estructura archivos y directorios, entre los que se destacan: \n\n\n\n\n\n\n\n\nDirectorio o archivo\n\n\nDescripci\u00f3n\n\n\n\n\n\n\n\n\n\n\n/etc/apache2/apache.conf\n\n\nArchivo de configuraci\u00f3n general de Apache\n\n\n\n\n\n\n/etc/apache2/sites-available\n\n\nDirectorio donde se alojan los archivos de configuraci\u00f3n de los sitios  definidos pero a\u00fan no activos (es decir, no habilitados\n\n\n\n\n\n\n/etc/apache2/sites-enabled\n\n\nDirectorio donde se alojan los archivos de configuraci\u00f3n de los sitios  activos o habilitados\n\n\n\n\n\n\n/etc/apache2/mods-available\n\n\nDirectorio donde se alojan los m\u00f3dulos de Apache a\u00fan no activos (es decir, no habilitados\n\n\n\n\n\n\n/etc/apache2/mods-enabled\n\n\nDirectorio donde se alojan los m\u00f3dulos de Apache activos o habilitados\n\n\n\n\n\n\n/var/www/html\n\n\nDirectorio por del sitio web por defecto, donde Apache aloja las p\u00e1ginas web\n\n\n\n\n\n\n/home/usuario/public_html\n\n\nDirectorio donde se aloja el sitio web personal de cada usuario del sistema\n\n\n\n\n\n\n\n\nGesti\u00f3n de m\u00f3dulos\n\n\nEl servidor web Apache contiene diversos m\u00f3dulos que proveen al servidor de funcionalidades extra. La mayor\u00eda de ellos est\u00e1n deshabilitados por defecto. \n\n\nLa sint\u00e1xis b\u00e1sica para tabajar con m\u00f3dulos es la siguiente: \n\n\nsudo a2\n[\nen\n|\ndis\n]\nmod nombreDelModulo\n\n\n\n\n\nDonde: \n\n\n\n\n\n\n\n\nSistema operativo\n\n\nUbicaci\u00f3n del archivo \nhosts\n\n\n\n\n\n\n\n\n\n\na2\n\n\nInicio del comando de Apache2\n\n\n\n\n\n\nen\n\n\nEnable\n es decir, habilitar el sitio web\n\n\n\n\n\n\ndis\n\n\nDisable\n, es decir, deshabilitar el sitio web\n\n\n\n\n\n\nmod\n\n\nSimboliza el concepto de \nm\u00f3dulo\n\n\n\n\n\n\nnombreDelModulo\n\n\nNombre del modulo que deseamos habilitar o deshabilitar\n\n\n\n\n\n\n\n\nPor ejemplo, la siguiente acci\u00f3n habilitar\u00e1 el m\u00f3dulo \nuserdir\n:\n\n\nsudo a2enmod userdir\n\n\n\n\n\nEn otras palabras, crear\u00e1 un \nenlace simb\u00f3lico\n del m\u00f3dulo \nuserdir\n desde la carpeta  \n/etc/apache2/mods-available\n hacia la carpeta \n/etc/apache2/mods-enabled\n.\n\n\nInicio y parada del servidor\n\n\nExisten diversos comandos para gestionar el servidor web Apache. \n\n\nDetener el servidor\n\n\nsudo systemctl stop apache2\n\n\n\n\n\nIniciar el servidor\n\n\nsudo systemctl start apache2\n\n\n\n\n\nReiniciar el servidor\n\n\nsudo systemctl restart apache2\n\n\n\n\n\nRecargar la configuraci\u00f3n del servidor (sin reiniciar)\n\n\nsudo systemctl reload apache2\n\n\n\n\n\nEstado del servidor\n\n\nsudo systemctl status apache2\n\n\n\n\n\nVerificar la configuraci\u00f3n del servidor\n\n\nsudo apache2ctl configtest\n\n\n\n\n\nCompatibilidad con versiones anteriores\n\n\nLas versiones m\u00e1s recientes del kernel de GNU/Linux adoptan el uso de \nSystemD\n. No obstante, versiones basadas en Debian anteriores a 2016, emplean el legendario \nSystemV\n. Al momento de escribir esta documentaci\u00f3n, en l\u00edneas generales, los sistemas basados en \nsystemd\n conservan compatibilidad con \nsystemV\n. Para el caso del servidor web Apache tenemos que: \n\n\nDetener el servidor\n\n\nsudo service apache2 stop\n\n\n\n\n\nIniciar el servidor\n\n\nsudo service apache2 start\n\n\n\n\n\nReiniciar el servidor\n\n\nsudo service apache2 restart\n\n\n\n\n\nRecargar la configuraci\u00f3n del servidor (sin reiniciar)\n\n\nsudo service apache2 reload\n\n\n\n\n\nConfigurando el \nnombre\n del servidor\n\n\nAl comprobar la configuraci\u00f3n de Apache obtenemos el siguiente error:\n\n\nSet the \nServerName\n directive globally to suppress this message \nSyntax OK\n\n\n\n\n\nPara corregir esto, abrimos el archivo de configuraci\u00f3n principal de Apache con nuestro editor de texto:\n\n\nsudo nano /etc/apache2/apache2.conf\n\n\n\n\n\nY agregamos al final del archivo la directiva \nServerName\n, seguida del \nnombre de dominio\n o \ndirecci\u00f3n IP\n de nuestro servidor web. Es decir: \n\n\nServerName\n dominio_del_servidor_o_IP \n\n\n\n\n\nGuardamos y cerramos el archivo. Luego, para verificar que todo est\u00e1 bien (es decir, que no hay errores de sintaxis en el archivo de configuraci\u00f3n de Apache):\n\n\nsudo apache2ctl configtest\n\n\n\n\n\nY como definimos la directiva global \nServerName\n, veremos la siguiente salida: \n\n\nOutput\n\nSyntax OK\n\n\n\n\n\nPor \u00faltimo, reiniciamos Apache para implementar los cambios:\n\n\nsudo systemctl restart apache2\n\n\n\n\n\nPHP", 
            "title": "Gesti\u00f3n b\u00e1sica"
        }, 
        {
            "location": "/lampGestionBasica/#apache", 
            "text": "A continuaci\u00f3n se listan directorios y archivos de configuraci\u00f3n as\u00ed como los comandos para gestionarlo desde la terminal.", 
            "title": "Apache"
        }, 
        {
            "location": "/lampGestionBasica/#archivos-y-carpetas-importantes", 
            "text": "Una vez instalado el servidor web Apache se crea una estructura archivos y directorios, entre los que se destacan:      Directorio o archivo  Descripci\u00f3n      /etc/apache2/apache.conf  Archivo de configuraci\u00f3n general de Apache    /etc/apache2/sites-available  Directorio donde se alojan los archivos de configuraci\u00f3n de los sitios  definidos pero a\u00fan no activos (es decir, no habilitados    /etc/apache2/sites-enabled  Directorio donde se alojan los archivos de configuraci\u00f3n de los sitios  activos o habilitados    /etc/apache2/mods-available  Directorio donde se alojan los m\u00f3dulos de Apache a\u00fan no activos (es decir, no habilitados    /etc/apache2/mods-enabled  Directorio donde se alojan los m\u00f3dulos de Apache activos o habilitados    /var/www/html  Directorio por del sitio web por defecto, donde Apache aloja las p\u00e1ginas web    /home/usuario/public_html  Directorio donde se aloja el sitio web personal de cada usuario del sistema", 
            "title": "Archivos y carpetas importantes"
        }, 
        {
            "location": "/lampGestionBasica/#gestion-de-modulos", 
            "text": "El servidor web Apache contiene diversos m\u00f3dulos que proveen al servidor de funcionalidades extra. La mayor\u00eda de ellos est\u00e1n deshabilitados por defecto.   La sint\u00e1xis b\u00e1sica para tabajar con m\u00f3dulos es la siguiente:   sudo a2 [ en | dis ] mod nombreDelModulo  Donde:      Sistema operativo  Ubicaci\u00f3n del archivo  hosts      a2  Inicio del comando de Apache2    en  Enable  es decir, habilitar el sitio web    dis  Disable , es decir, deshabilitar el sitio web    mod  Simboliza el concepto de  m\u00f3dulo    nombreDelModulo  Nombre del modulo que deseamos habilitar o deshabilitar     Por ejemplo, la siguiente acci\u00f3n habilitar\u00e1 el m\u00f3dulo  userdir :  sudo a2enmod userdir  En otras palabras, crear\u00e1 un  enlace simb\u00f3lico  del m\u00f3dulo  userdir  desde la carpeta   /etc/apache2/mods-available  hacia la carpeta  /etc/apache2/mods-enabled .", 
            "title": "Gesti\u00f3n de m\u00f3dulos"
        }, 
        {
            "location": "/lampGestionBasica/#inicio-y-parada-del-servidor", 
            "text": "Existen diversos comandos para gestionar el servidor web Apache.   Detener el servidor  sudo systemctl stop apache2  Iniciar el servidor  sudo systemctl start apache2  Reiniciar el servidor  sudo systemctl restart apache2  Recargar la configuraci\u00f3n del servidor (sin reiniciar)  sudo systemctl reload apache2  Estado del servidor  sudo systemctl status apache2  Verificar la configuraci\u00f3n del servidor  sudo apache2ctl configtest", 
            "title": "Inicio y parada del servidor"
        }, 
        {
            "location": "/lampGestionBasica/#compatibilidad-con-versiones-anteriores", 
            "text": "Las versiones m\u00e1s recientes del kernel de GNU/Linux adoptan el uso de  SystemD . No obstante, versiones basadas en Debian anteriores a 2016, emplean el legendario  SystemV . Al momento de escribir esta documentaci\u00f3n, en l\u00edneas generales, los sistemas basados en  systemd  conservan compatibilidad con  systemV . Para el caso del servidor web Apache tenemos que:   Detener el servidor  sudo service apache2 stop  Iniciar el servidor  sudo service apache2 start  Reiniciar el servidor  sudo service apache2 restart  Recargar la configuraci\u00f3n del servidor (sin reiniciar)  sudo service apache2 reload", 
            "title": "Compatibilidad con versiones anteriores"
        }, 
        {
            "location": "/lampGestionBasica/#configurando-el-nombre-del-servidor", 
            "text": "Al comprobar la configuraci\u00f3n de Apache obtenemos el siguiente error:  Set the  ServerName  directive globally to suppress this message \nSyntax OK  Para corregir esto, abrimos el archivo de configuraci\u00f3n principal de Apache con nuestro editor de texto:  sudo nano /etc/apache2/apache2.conf  Y agregamos al final del archivo la directiva  ServerName , seguida del  nombre de dominio  o  direcci\u00f3n IP  de nuestro servidor web. Es decir:   ServerName  dominio_del_servidor_o_IP   Guardamos y cerramos el archivo. Luego, para verificar que todo est\u00e1 bien (es decir, que no hay errores de sintaxis en el archivo de configuraci\u00f3n de Apache):  sudo apache2ctl configtest  Y como definimos la directiva global  ServerName , veremos la siguiente salida:   Output \nSyntax OK  Por \u00faltimo, reiniciamos Apache para implementar los cambios:  sudo systemctl restart apache2", 
            "title": "Configurando el nombre del servidor"
        }, 
        {
            "location": "/lampGestionBasica/#php", 
            "text": "", 
            "title": "PHP"
        }, 
        {
            "location": "/lampModulosApache/", 
            "text": "El servidor web Apache contiene diversos m\u00f3dulos que proveen al servidor de funcionalidades extra. La mayor\u00eda de ellos est\u00e1n deshabilitados por defecto. \n\n\nGestionando m\u00f3dulos\n\n\nLa sint\u00e1xis b\u00e1sica para tabajar con m\u00f3dulos es la siguiente: \n\n\nsudo a2\n[\nen\n|\ndis\n]\nmod nombreDelModulo\n\n\n\n\n\nDonde: \n\n\n\n\n\n\n\n\nSistema operativo\n\n\nUbicaci\u00f3n del archivo \nhosts\n\n\n\n\n\n\n\n\n\n\na2\n\n\nInicio del comando de Apache2\n\n\n\n\n\n\nen\n\n\nEnable\n es decir, habilitar el sitio web\n\n\n\n\n\n\ndis\n\n\nDisable\n, es decir, deshabilitar el sitio web\n\n\n\n\n\n\nmod\n\n\nSimboliza el concepto de \nm\u00f3dulo\n\n\n\n\n\n\nnombreDelModulo\n\n\nNombre del modulo que deseamos habilitar o deshabilitar\n\n\n\n\n\n\n\n\nPor ejemplo, la siguiente acci\u00f3n habilitar\u00e1 el m\u00f3dulo \nuserdir\n:\n\n\nsudo a2enmod userdir\n\n\n\n\n\nEn otras palabras, crear\u00e1 un \nenlace simb\u00f3lico\n del m\u00f3dulo \nuserdir\n desde la carpeta  \n/etc/apache2/mods-available\n hacia la carpeta \n/etc/apache2/mods-enabled\n.", 
            "title": "M\u00f3dulos de Apache"
        }, 
        {
            "location": "/lampModulosApache/#gestionando-modulos", 
            "text": "La sint\u00e1xis b\u00e1sica para tabajar con m\u00f3dulos es la siguiente:   sudo a2 [ en | dis ] mod nombreDelModulo  Donde:      Sistema operativo  Ubicaci\u00f3n del archivo  hosts      a2  Inicio del comando de Apache2    en  Enable  es decir, habilitar el sitio web    dis  Disable , es decir, deshabilitar el sitio web    mod  Simboliza el concepto de  m\u00f3dulo    nombreDelModulo  Nombre del modulo que deseamos habilitar o deshabilitar     Por ejemplo, la siguiente acci\u00f3n habilitar\u00e1 el m\u00f3dulo  userdir :  sudo a2enmod userdir  En otras palabras, crear\u00e1 un  enlace simb\u00f3lico  del m\u00f3dulo  userdir  desde la carpeta   /etc/apache2/mods-available  hacia la carpeta  /etc/apache2/mods-enabled .", 
            "title": "Gestionando m\u00f3dulos"
        }, 
        {
            "location": "/lampUserdir/", 
            "text": "Es posible crear un \nespacio web para cada usuario del sistema\n, donde \u00e9stos pueden alojar su propio contenido web. Para hacerlo, seguimos las siguientes instrucciones: \n\n\nCreando el contenido del sitio web\n\n\nEn primer lugar, creamos el directorio en el cual se agregar\u00e1n las p\u00e1ginas webs del usuario:\n\n\nmkdir /home/tuUsuario/public_html\n\n\n\n\n\nSolo resta agregar \n\"las p\u00e1ginas webs\"\n dentro de la carpeta \npublic_html\n que acabamos de crear (debe existir necesariamente un archivo llamado index.html o index.php) \n\n\nHabilitando el m\u00f3dulo userdir\n\n\nPara permitir que los usuarios posean su propio sitio web a\u00fan resta un paso: la habilitaci\u00f3n del m\u00f3dulo de Apache correspondiente. Entre los distintos m\u00f3dulos de Apache, quien cumple con nuestro cometido es el m\u00f3dulo llamado \nuserdir\n. Para habilitar dicho m\u00f3dulo, ejecutamos en la terminal: \n\n\nsudo a2enmod userdir\n\n\n\n\n\nLuego, reiniciamos el servidor para que incorpore los cambios:\n\n\nsudo systemctl restart apache2", 
            "title": "Web de usuario"
        }, 
        {
            "location": "/lampUserdir/#creando-el-contenido-del-sitio-web", 
            "text": "En primer lugar, creamos el directorio en el cual se agregar\u00e1n las p\u00e1ginas webs del usuario:  mkdir /home/tuUsuario/public_html  Solo resta agregar  \"las p\u00e1ginas webs\"  dentro de la carpeta  public_html  que acabamos de crear (debe existir necesariamente un archivo llamado index.html o index.php)", 
            "title": "Creando el contenido del sitio web"
        }, 
        {
            "location": "/lampUserdir/#habilitando-el-modulo-userdir", 
            "text": "Para permitir que los usuarios posean su propio sitio web a\u00fan resta un paso: la habilitaci\u00f3n del m\u00f3dulo de Apache correspondiente. Entre los distintos m\u00f3dulos de Apache, quien cumple con nuestro cometido es el m\u00f3dulo llamado  userdir . Para habilitar dicho m\u00f3dulo, ejecutamos en la terminal:   sudo a2enmod userdir  Luego, reiniciamos el servidor para que incorpore los cambios:  sudo systemctl restart apache2", 
            "title": "Habilitando el m\u00f3dulo userdir"
        }, 
        {
            "location": "/lampVirtualHosts/", 
            "text": "Una de las aplicaciones de la caracter\u00edstica de Apache llamada \nVirtualHosts\n consiste en la posibilidad de crear \ndiferentes sitios web\n cada uno con su \nnombre de dominio propio\n aunque \u00e9stos se encuentren alojados en un mismo servidor y, por lo tanto, tengan \nla misma direcci\u00f3n IP\n. \n\n\n\n\nDocumentaci\u00f3n oficial de Apache\n\n\nEl t\u00e9rmino \nHosting Virtual\n se refiere a hacer funcionar m\u00e1s de un sitio web tales como \nwww.company1.com\n y \nwww.company2.com\n en una sola m\u00e1quina. \n\n\nLos sitios web virtuales pueden estar \n\"basados en direcciones IP\"\n, lo que significa que cada sitio web tiene una direcci\u00f3n IP diferente, o \n\"basados en nombres diferentes\"\n, lo que significa que con una sola direcci\u00f3n IP est\u00e1n funcionando sitios web con diferentes nombres (de dominio). \n\n\nEl hecho de que est\u00e9n funcionando en la misma m\u00e1quina f\u00edsica pasa completamente desapercibido para el usuario que visita esos sitios web.\n\n\n\n\nCreando el contenido web\n\n\nEn primer lugar creamos la carpeta donde se alojaran las paginas web del \nhost virtual\n que definiremos. \n\n\nPor ejemplo:\n\n\nmkdir /home/usuario/public_html\n\n\n\n\n\nEl paso siguiente ser\u00e1 agregar en el directorio el contenido del sitio web (p\u00e1ginas web, im\u00e1genes, archivos de estilo, sripts, etc). Recordar que debe existir necesariamente alg\u00fan archivo \u00edndice index.html o index.php (o con alguna otra extensi\u00f3n, seg\u00fan la configuraci\u00f3n del servidor). \n\n\nConfigurando el Host Virtual\n\n\nPara iniciar la configuraci\u00f3n de nuestro \nhost virtual\n nos dirigiremos a la siguiente carpeta: \n\n\ncd\n /etc/apache2/sites-available\n\n\n\n\n\nUna vez ubicados en el directorio correspodiente nos disponemos a crear el \narchivo de configuracion del Host Virtual\n (el archivo en cuesti\u00f3n puede llamarse de cualquier forma, pero debe finalizar necesariamente con la extension \n.conf\n)\n\n\nvim misitio.lan.conf\n\n\n\n\n\nY a continuaci\u00f3n escribimos la configuraci\u00f3n de nuestro Host Virtual. Un ejemplo simple de configuracion para el sitio ficticio \nmisitio.lan\n:\n\n\nVirtualHost\n \n*:80\n\n\n \n# Correo del administrador del servidor\n\n \nServerAdmin\n    tunombre@mail.com\n\n \n# Nombre de dominio del sitio\n\n \nServerName\n www.misitio.lan\n\n \n# Alias del nombre de dominio del sitio\n\n \nServerAlias\n    misitio.lan http:_misitio.lan\n\n \n# Carpeta ra\u00edz donde se alojar\u00e1n las p\u00e1ginas web \n\n \nDocumentRoot\n   \n/home/usuario/public_html\n   \n\n \n# Ruta en la que Apache escribir\u00e1 el registor de errores\n\n \nErrorLog\n   \n/home/usuario/errores_misitio.lan\n\n\n \n# Ruta en la que Apache escribir\u00e1 el registor accesos\n\n \nCustomLog\n  \n/home/usuario/accessos_misitio.lan\n combined\n\n\n/VirtualHost\n\n\n\n\n\n\n\n\nNota\n\n\nLos archivos de \nlog\n son archivos en los que el sistema guarda informaci\u00f3n sobre el funcionamiento de alg\u00fan servicio determinado indicando errores, advertencias, accesos, etc. En distribuciones GNU/Linux, se encuentran alojados bajo la ruta \n/var/log/\n. En el ejemplo, se ha optado por guardar dichos archivos en la carpeta home del usuario. \n\n\n\n\nHabilitando el sitio creado\n\n\nPara que Apache ponga el sitio en modo \nhabilitado\n (hasta ahora lo definimos, pero no lo habilitamos), ejecutamos en la terminal:\n\n\nsudo a2ensite misitio.lan.conf\n\n\n\n\n\nEste comando crear\u00e1 un [[https:_es.wikipedia.org/wiki/Enlace_simb%C3%B3lico|enlace simb\u00f3lico]] del archivo \nmisitio.lan.conf\n desde la carpeta \n/etc/apache2/sites-available\n hacia la carpeta \n/etc/apache2/sites-enabled\n. \n\n\nPor \u00faltimo, para que Apache haga efectivo todos los cambios, lo reiniciamos: \n\n\nsudo systemctl restart apache2\n\n\n\n\n\nAccediendo al sitio web\n\n\nEl \u00faltimo paso que tendremos que dar para acceder a nuestro sitio web ser\u00e1 definir el \nm\u00e9todo de resoluci\u00f3n de su nombre de dominio\n.", 
            "title": "Hosts virtuales"
        }, 
        {
            "location": "/lampVirtualHosts/#creando-el-contenido-web", 
            "text": "En primer lugar creamos la carpeta donde se alojaran las paginas web del  host virtual  que definiremos.   Por ejemplo:  mkdir /home/usuario/public_html  El paso siguiente ser\u00e1 agregar en el directorio el contenido del sitio web (p\u00e1ginas web, im\u00e1genes, archivos de estilo, sripts, etc). Recordar que debe existir necesariamente alg\u00fan archivo \u00edndice index.html o index.php (o con alguna otra extensi\u00f3n, seg\u00fan la configuraci\u00f3n del servidor).", 
            "title": "Creando el contenido web"
        }, 
        {
            "location": "/lampVirtualHosts/#configurando-el-host-virtual", 
            "text": "Para iniciar la configuraci\u00f3n de nuestro  host virtual  nos dirigiremos a la siguiente carpeta:   cd  /etc/apache2/sites-available  Una vez ubicados en el directorio correspodiente nos disponemos a crear el  archivo de configuracion del Host Virtual  (el archivo en cuesti\u00f3n puede llamarse de cualquier forma, pero debe finalizar necesariamente con la extension  .conf )  vim misitio.lan.conf  Y a continuaci\u00f3n escribimos la configuraci\u00f3n de nuestro Host Virtual. Un ejemplo simple de configuracion para el sitio ficticio  misitio.lan :  VirtualHost   *:80 \n\n  # Correo del administrador del servidor \n  ServerAdmin     tunombre@mail.com\n\n  # Nombre de dominio del sitio \n  ServerName  www.misitio.lan\n\n  # Alias del nombre de dominio del sitio \n  ServerAlias     misitio.lan http:_misitio.lan\n\n  # Carpeta ra\u00edz donde se alojar\u00e1n las p\u00e1ginas web  \n  DocumentRoot     /home/usuario/public_html    \n\n  # Ruta en la que Apache escribir\u00e1 el registor de errores \n  ErrorLog     /home/usuario/errores_misitio.lan \n\n  # Ruta en la que Apache escribir\u00e1 el registor accesos \n  CustomLog    /home/usuario/accessos_misitio.lan  combined /VirtualHost    Nota  Los archivos de  log  son archivos en los que el sistema guarda informaci\u00f3n sobre el funcionamiento de alg\u00fan servicio determinado indicando errores, advertencias, accesos, etc. En distribuciones GNU/Linux, se encuentran alojados bajo la ruta  /var/log/ . En el ejemplo, se ha optado por guardar dichos archivos en la carpeta home del usuario.", 
            "title": "Configurando el Host Virtual"
        }, 
        {
            "location": "/lampVirtualHosts/#habilitando-el-sitio-creado", 
            "text": "Para que Apache ponga el sitio en modo  habilitado  (hasta ahora lo definimos, pero no lo habilitamos), ejecutamos en la terminal:  sudo a2ensite misitio.lan.conf  Este comando crear\u00e1 un [[https:_es.wikipedia.org/wiki/Enlace_simb%C3%B3lico|enlace simb\u00f3lico]] del archivo  misitio.lan.conf  desde la carpeta  /etc/apache2/sites-available  hacia la carpeta  /etc/apache2/sites-enabled .   Por \u00faltimo, para que Apache haga efectivo todos los cambios, lo reiniciamos:   sudo systemctl restart apache2", 
            "title": "Habilitando el sitio creado"
        }, 
        {
            "location": "/lampVirtualHosts/#accediendo-al-sitio-web", 
            "text": "El \u00faltimo paso que tendremos que dar para acceder a nuestro sitio web ser\u00e1 definir el  m\u00e9todo de resoluci\u00f3n de su nombre de dominio .", 
            "title": "Accediendo al sitio web"
        }, 
        {
            "location": "/lampEjercicios/", 
            "text": "A continuaci\u00f3n se listan dos ejercicios en los que deber\u00e1s aplicar los conocimientos adquiridos. \n\n\nEjercicio 1\n\n\nLa empresa \"Penguin S.A.\", dispone de un servidor web dedicado y tan solo una direccion IP. La empresa necesita que su servidor web gestione diferentes sitios web, cada uno con su nombre de dominio.\n\n\nHablando con ejecutivos de la empresa, se acuerda en desplegar las siguientes plataformas webs: \n\n\n\n\nSitio oficial\n\n\nSucursal Patagonia\n\n\nFrontEnd para la administraci\u00f3n de la  base de datos MySQL. \n\n\n\n\nEn la siguiente tabla se indican adem\u00e1s las respectivas rutas donde deber\u00e1n alojar los archivos de los sitios web. \n\n\n\n\n\n\n\n\n#\n\n\nDominio\n\n\nDirectorio ra\u00edz (DocumentRoot)\n\n\n\n\n\n\n\n\n\n\n1\n\n\npenguin.net\n\n\n/home/penguin/public_html/penguin.net\n\n\n\n\n\n\n2\n\n\npatagon.penguin.net\n\n\n/home/penguin/public_html/patagon.penguin.net\n\n\n\n\n\n\n3\n\n\nphpmyadmin.penguin.net\n\n\n/usr/share/phpmyadmin\n\n\n\n\n\n\n\n\nInstalaci\u00f3n de paquetes\n\n\nDeber\u00e1 \ninstalarse un entorno LAMP\n necesario para el despliegue de los sitios web. \n\n\nCreaci\u00f3n de usuarios\n\n\nDeber\u00e1 crearse un usuario llamado \npenguin\n.\n\n\nCreaci\u00f3n los directorios ra\u00edz\n\n\nLa acci\u00f3n deber\u00e1 realizarse para los dominios \npenguin.net\n y \npatagon.penguin.net\n tomando en cuenta los datos que figuran en el cuadro acordado con el cliente. \n\n\nCreaci\u00f3n de contenido web\n\n\nDentro de los \ndirectorios ra\u00edz\n creados en el punto anterior (necesariamente deber\u00e1 existir una p\u00e1gina llamada index.html o index.php) y a modo de ejemplo, deber\u00e1n crearse las siguientes p\u00e1ginas: \n\n\n\n\nPara \npenguin.net\n: un archivo \"index.html\" con la frase \"Penguin.net - Sitio Oficial\"\n\n\nPara \npatagon.penguin.net\n, un archivo \"index.php\" con el siguiente contenido: \n\n\n\n\n!DOCTYPE\n\n\nhtml\n\n\nhead\n\n\ntitle\nPenguin S.A.\n/\ntitle\n\n\n/\nhead\n\n\nbody\n\n\nh1\nPenguin.Net Patagon\n/\nh1\n\n\np\nSitio en construccion\n/\np\n\n\n? php phpinfo(); ?\n\n\n/\nbody\n\n\n/\nhtml\n\n\n\n\n\n\nLa instrucci\u00f3n \nphpinfo();\n mostrar\u00e1 la configuraci\u00f3n de PHP instalada en el servidor. Por supuesto, se realiza a modo de ejemplo. No debe realizarse en sitios de producci\u00f3n. \n\n\nCreaci\u00f3n de los archivos de configuraci\u00f3n\n\n\nSe deben crear los archivos de configuraci\u00f3n de cada \nHost Virtual\n solicitado por el cliente. Tener en cuenta que para todos los casos, el administrador sera \nadmin@penguin.net\n.\n\n\nResoluci\u00f3n de nombres\n\n\nSe debe realizar a trav\u00e9s del m\u00e9todo del archivo hosts.\n\n\n\n\nAutomatizaci\u00f3n de tareas\n\n\nTal vez ser\u00eda m\u00e1s practico realizar todas las acciones anteriores valiendose de un script. \u00bfTe anim\u00e1s a escribirlo? \n\n\n\n\nError 403\n\n\n\n\nError\n\n\nEs posible que con la configuraci\u00f3n por defecto de Apache, obtengamos un ''error 403''. En ese caso, realizar los pasos que se describen a continuaci\u00f3n\n\n\n\n\nPara corregir dicho error, qbrimos el archivo de configuraci\u00f3n general de Apache: \n\n\nsudo\n vim etc/apache2/apache2.conf\n\n\n\n\n\nY modificamos el archivo de configuraci\u00f3n general de Apache, aproximadamente en la l\u00ednea 153 y que posee el siguiente aspecto: \n\n\nDirectory\n \n/\n\n\nOptions\n FollowSymLinks\n\nAllowOverride\n \nNone\n\n\nRequire\n \nall\n denied\n\n/Directory\n\n\n\n\n\n\nTendremos que modificarlo para que quede: \n\n\nDirectory\n \n/\n\n\nOptions\n FollowSymLinks\n\nAllowOverride\n \nNone\n\n\n# Require all denied\n\n\n/Directory\n\n\n\n\n\n\nEjercicio 2\n\n\nUna vez que hayamos \ninstalado correctamente el entorno LAMP\n podremos instalar en el servidor web distintas aplicaciones webs que funcionen con dicha tecnolog\u00eda (PHP y MySQL). \n\n\nA continuaci\u00f3n se ofrecen distintas aplicaciones para su descarga junto con las indicaciones de instalaci\u00f3n. \n\n\nDescargando las aplicaciones\n\n\nLa siguiente lista de aplicaciones se encuentra alojada en el servidor local. Son ejemplos de aplicaciones populares en internet:\n\n\n\n\nDokuwiki\n\n\nFengOffice\n\n\nJoomla!\n\n\nWordpress\n\n\n\n\nPod\u00e9s elegir la que desees y descargarlas en el directorio ra\u00edz de tu sitio web de la siguiente manera:  \n\n\nwget http://url_de_la_aplicacion/aplicacion.zip\n\n\n\n\n\nInstalando la aplicaci\u00f3n\n\n\nTendremos que \ndescomprimir la aplicaci\u00f3n descargada en el directorio ra\u00edz de nuestro sitio\n. Luego, abriremos nuestro navegador web y visitaremos la direcci\u00f3n web \nhttp://tudominio/aplicacion\n o bien \nhttp://tuDireccionIP/aplicacion\n y seguir las instrucciones de instalaci\u00f3n. \n\n\n\n\nBase de datos\n\n\nDependiendo de la aplicaci\u00f3n web que hayas elegido, es posible que necesites crear una base de datos. Para ello, dirigite a \nhttp://tudominio/phpmyadmin\n o \nhttp://tuDireccionIP/phpmyadmin\n e ingres\u00e1 con las credenciales del usuario root. Una vez all\u00ed podr\u00e1s crear la base de datos solicitada.", 
            "title": "Ejercicios pr\u00e1cticos"
        }, 
        {
            "location": "/lampEjercicios/#ejercicio-1", 
            "text": "La empresa \"Penguin S.A.\", dispone de un servidor web dedicado y tan solo una direccion IP. La empresa necesita que su servidor web gestione diferentes sitios web, cada uno con su nombre de dominio.  Hablando con ejecutivos de la empresa, se acuerda en desplegar las siguientes plataformas webs:    Sitio oficial  Sucursal Patagonia  FrontEnd para la administraci\u00f3n de la  base de datos MySQL.    En la siguiente tabla se indican adem\u00e1s las respectivas rutas donde deber\u00e1n alojar los archivos de los sitios web.      #  Dominio  Directorio ra\u00edz (DocumentRoot)      1  penguin.net  /home/penguin/public_html/penguin.net    2  patagon.penguin.net  /home/penguin/public_html/patagon.penguin.net    3  phpmyadmin.penguin.net  /usr/share/phpmyadmin", 
            "title": "Ejercicio 1"
        }, 
        {
            "location": "/lampEjercicios/#instalacion-de-paquetes", 
            "text": "Deber\u00e1  instalarse un entorno LAMP  necesario para el despliegue de los sitios web.", 
            "title": "Instalaci\u00f3n de paquetes"
        }, 
        {
            "location": "/lampEjercicios/#creacion-de-usuarios", 
            "text": "Deber\u00e1 crearse un usuario llamado  penguin .", 
            "title": "Creaci\u00f3n de usuarios"
        }, 
        {
            "location": "/lampEjercicios/#creacion-los-directorios-raiz", 
            "text": "La acci\u00f3n deber\u00e1 realizarse para los dominios  penguin.net  y  patagon.penguin.net  tomando en cuenta los datos que figuran en el cuadro acordado con el cliente.", 
            "title": "Creaci\u00f3n los directorios ra\u00edz"
        }, 
        {
            "location": "/lampEjercicios/#creacion-de-contenido-web", 
            "text": "Dentro de los  directorios ra\u00edz  creados en el punto anterior (necesariamente deber\u00e1 existir una p\u00e1gina llamada index.html o index.php) y a modo de ejemplo, deber\u00e1n crearse las siguientes p\u00e1ginas:    Para  penguin.net : un archivo \"index.html\" con la frase \"Penguin.net - Sitio Oficial\"  Para  patagon.penguin.net , un archivo \"index.php\" con el siguiente contenido:    !DOCTYPE  html  head  title Penguin S.A. / title  / head  body  h1 Penguin.Net Patagon / h1  p Sitio en construccion / p  ? php phpinfo(); ?  / body  / html   La instrucci\u00f3n  phpinfo();  mostrar\u00e1 la configuraci\u00f3n de PHP instalada en el servidor. Por supuesto, se realiza a modo de ejemplo. No debe realizarse en sitios de producci\u00f3n.", 
            "title": "Creaci\u00f3n de contenido web"
        }, 
        {
            "location": "/lampEjercicios/#creacion-de-los-archivos-de-configuracion", 
            "text": "Se deben crear los archivos de configuraci\u00f3n de cada  Host Virtual  solicitado por el cliente. Tener en cuenta que para todos los casos, el administrador sera  admin@penguin.net .", 
            "title": "Creaci\u00f3n de los archivos de configuraci\u00f3n"
        }, 
        {
            "location": "/lampEjercicios/#resolucion-de-nombres", 
            "text": "Se debe realizar a trav\u00e9s del m\u00e9todo del archivo hosts.   Automatizaci\u00f3n de tareas  Tal vez ser\u00eda m\u00e1s practico realizar todas las acciones anteriores valiendose de un script. \u00bfTe anim\u00e1s a escribirlo?", 
            "title": "Resoluci\u00f3n de nombres"
        }, 
        {
            "location": "/lampEjercicios/#error-403", 
            "text": "Error  Es posible que con la configuraci\u00f3n por defecto de Apache, obtengamos un ''error 403''. En ese caso, realizar los pasos que se describen a continuaci\u00f3n   Para corregir dicho error, qbrimos el archivo de configuraci\u00f3n general de Apache:   sudo  vim etc/apache2/apache2.conf  Y modificamos el archivo de configuraci\u00f3n general de Apache, aproximadamente en la l\u00ednea 153 y que posee el siguiente aspecto:   Directory   /  Options  FollowSymLinks AllowOverride   None  Require   all  denied /Directory   Tendremos que modificarlo para que quede:   Directory   /  Options  FollowSymLinks AllowOverride   None  # Require all denied  /Directory", 
            "title": "Error 403"
        }, 
        {
            "location": "/lampEjercicios/#ejercicio-2", 
            "text": "Una vez que hayamos  instalado correctamente el entorno LAMP  podremos instalar en el servidor web distintas aplicaciones webs que funcionen con dicha tecnolog\u00eda (PHP y MySQL).   A continuaci\u00f3n se ofrecen distintas aplicaciones para su descarga junto con las indicaciones de instalaci\u00f3n.", 
            "title": "Ejercicio 2"
        }, 
        {
            "location": "/lampEjercicios/#descargando-las-aplicaciones", 
            "text": "La siguiente lista de aplicaciones se encuentra alojada en el servidor local. Son ejemplos de aplicaciones populares en internet:   Dokuwiki  FengOffice  Joomla!  Wordpress   Pod\u00e9s elegir la que desees y descargarlas en el directorio ra\u00edz de tu sitio web de la siguiente manera:    wget http://url_de_la_aplicacion/aplicacion.zip", 
            "title": "Descargando las aplicaciones"
        }, 
        {
            "location": "/lampEjercicios/#instalando-la-aplicacion", 
            "text": "Tendremos que  descomprimir la aplicaci\u00f3n descargada en el directorio ra\u00edz de nuestro sitio . Luego, abriremos nuestro navegador web y visitaremos la direcci\u00f3n web  http://tudominio/aplicacion  o bien  http://tuDireccionIP/aplicacion  y seguir las instrucciones de instalaci\u00f3n.    Base de datos  Dependiendo de la aplicaci\u00f3n web que hayas elegido, es posible que necesites crear una base de datos. Para ello, dirigite a  http://tudominio/phpmyadmin  o  http://tuDireccionIP/phpmyadmin  e ingres\u00e1 con las credenciales del usuario root. Una vez all\u00ed podr\u00e1s crear la base de datos solicitada.", 
            "title": "Instalando la aplicaci\u00f3n"
        }
    ]
}